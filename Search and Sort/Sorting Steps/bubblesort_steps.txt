array to be sorted = [3,2,13,4,6]

#Step 1
## range(len(arr)-1,0,-1) or range(5-1,0,-1)

for 4 in [4,3,2,1]:
	#Step 1.1
	for 0 in [0,1,2,3]: #range(4)
		if arr[k(0)] or 3 > arr[k + 1(1)] or 2: True
		Then
			temp = arr[k(0)] or 3
			arr[k] = arr[k + 1(1)] or 2 #[2,2,13,4,6]
			arr[k + 1(1)] = temp or 3 #[2,3,13,4,6]
	#Step 1.2
	for 1 in [1,2,3]:
		if arr[k(1)] or 3 > arr[k + 1(2)] or 13: False
		Then No Swap
	#Step 1.3
	for 2 in [2,3]:
		if arr[k(2)] or 13 > arr[k + 1(3)] or 4: True
		Then
			temp = arr[k(2)] or 13
			arr[k] = arr[k + 1(3)] or 4 #[2,3,4,4,6]
			arr[k + 1(3)] = temp or 13 #[2,3,4,13,6]
	#Step 1.4
	for 3 in [3]:
		if arr[k(3)] or 13 > arr[k + 1(4)] or 6: True
		Then
			temp = arr[k(3)] or 13
			arr[k] = arr[k + 1(4)] or 6 #[2,3,4,6,6]
			arr[k + 1(4)] = temp or 13 #[2,3,4,6,13]

	*Notice that the array is already sorted but the algorithm
	can't verify unless it finishes the outer loop

#Step 2
array to be sorted = [2,3,4,6,13]
for 3 in [3,2,1]:
	#Step 2.1
	for 0 in [0,1,2]: #range(3)
		if arr[k(0)] or 2 > arr[k + 1(1)] or 3: False
		Then No Swap
	#Step 2.2
	for 1 in [1,2]:
		if arr[k(1)] or 3 > arr[k + 1(2)] or 4: False
		Then No Swap
	#Step 2.3
	for 2 in [2]:
		if arr[k(2)] or 4 > arr[k + 1(3)] or 6: False
		Then No Swap

#Step 3
array to be sorted = [2,3,4,6,13]
for 2 in [2,1]:
	#Step 3.1
	for 0 in [0,1]: #range(2)
		if arr[k(0)] or 2 > arr[k + 1(1)] or 3: False
		Then No Swap
	#Step 3.2
	for 1 in [1]:
		if arr[k(1)] or 3 > arr[k + 1(2)] or 4: False
		Then No Swap
#Step 4
array to be sorted = [2,3,4,6,13]
for 2 in [1]:
	#Step 4.1
	for 0 in [0]: #range(1)
		if arr[k(0)] or 2 > arr[k + 1(1)] or 3: False
		Then No Swap